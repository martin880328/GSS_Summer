--1.	列出每個借閱人每年借書數量，並依借閱人編號和年度做排序
SELECT USER_ID AS KeeperId,USER_CNAME AS CName,
		USER_ENAME AS EName,
		YEAR(LEND_DATE) AS BorrowYear,
		COUNT(BOOK_ID) AS BorrowCnt
FROM MEMBER_M M
	LEFT JOIN BOOK_LEND_RECORD  L
		ON L.KEEPER_ID=M.USER_ID
GROUP BY USER_ID,USER_CNAME,USER_ENAME,YEAR(LEND_DATE)
ORDER BY KeeperId,BorrowYear;

--2.	列出最受歡迎的書前五名(借閱數量最多前五名)
SELECT TOP(5) WITH TIES L.BOOK_ID AS BookId, 
		d.BOOK_NAME AS BookName, 
		COUNT(L.BOOK_ID) AS QTY
FROM BOOK_LEND_RECORD L
 INNER JOIN BOOK_DATA d
  ON L.BOOK_ID = d.BOOK_ID
GROUP BY L.BOOK_ID, d.BOOK_NAME
ORDER BY QTY DESC; 

--3.	以一季列出2019年每一季書籍借閱書量
SELECT s.SPAN_YEAR+'/'+ s.SPAN_START+'~'+ s.SPAN_YEAR+'/'+s.SPAN_END AS [Quarter],
		COUNT(L.BOOK_ID) AS Cnt
FROM BOOK_LEND_RECORD L
	INNER JOIN SPAN_TABLE s
		ON YEAR(L.LEND_DATE)=s.SPAN_YEAR
			AND MONTH(L.LEND_DATE) BETWEEN s.SPAN_START AND s.SPAN_END
WHERE s.SPAN_YEAR=2019
GROUP BY s.SPAN_YEAR,s.SPAN_START,s.SPAN_END,s.[NOTE]
ORDER BY [Quarter];

--4.	撈出每個分類借閱數量前三名書本及數量
WITH Lend
AS(
	SELECT ROW_NUMBER() OVER(PARTITION BY cl.BOOK_CLASS_NAME ORDER BY COUNT(d.BOOK_ID) DESC,d.BOOK_ID) AS Seq,
			cl.BOOK_CLASS_NAME AS BookClass, 
			d.BOOK_ID AS BookId, 
			d.BOOK_NAME AS BookName, 
			COUNT(d.BOOK_ID) AS Cnt
	FROM BOOK_CLASS cl
		LEFT JOIN 
			(BOOK_DATA d			
				INNER JOIN BOOK_LEND_RECORD L
					ON L.BOOK_ID = d.BOOK_ID)	
		ON cl.BOOK_CLASS_ID=d.BOOK_CLASS_ID
	GROUP BY cl.BOOK_CLASS_NAME, d.BOOK_ID,d.BOOK_NAME
)

SELECT L.Seq,L.BookClass,L.BookId,L.BookName,L.Cnt
FROM Lend L
WHERE L.Seq<=3;

--5.	請列出 2016, 2017, 2018, 2019 各書籍類別的借閱數量比較
SELECT cl.BOOK_CLASS_ID AS ClassId, 
		cl.BOOK_CLASS_NAME AS ClassName,
 SUM(CASE WHEN YEAR(L.LEND_DATE)=2016 THEN 1 ELSE 0 END) AS CNT2016,
 SUM(CASE WHEN YEAR(L.LEND_DATE)=2017 THEN 1 ELSE 0 END) AS CNT2017,
 SUM(CASE WHEN YEAR(L.LEND_DATE)=2018 THEN 1 ELSE 0 END) AS CNT2018,
 SUM(CASE WHEN YEAR(L.LEND_DATE)=2019 THEN 1 ELSE 0 END) AS CNT2019
FROM BOOK_CLASS cl
	LEFT JOIN 
		(BOOK_DATA d		
			INNER JOIN BOOK_LEND_RECORD L
				ON L.BOOK_ID=d.BOOK_ID)
		ON cl.BOOK_CLASS_ID=d.BOOK_CLASS_ID
GROUP BY cl.BOOK_CLASS_ID,cl.BOOK_CLASS_NAME
ORDER BY cl.BOOK_CLASS_ID;

--6.	請使用 PIVOT 語法列出2016, 2017, 2018, 2019 各書籍類別的借閱數量比較
SELECT ClassId, 
		ClassName,
		[2016] AS CNT2016,
		[2017] AS CNT2017,
		[2018] AS CNT2018,
		[2019] AS CNT2019
FROM (
	SELECT cl.BOOK_CLASS_ID AS ClassId, 
			cl.BOOK_CLASS_NAME AS ClassName, 
			YEAR(L.LEND_DATE) AS LendYear
	FROM BOOK_CLASS cl
	LEFT JOIN 
		(BOOK_DATA d		
			INNER JOIN BOOK_LEND_RECORD L
				ON L.BOOK_ID=d.BOOK_ID)
		ON cl.BOOK_CLASS_ID=d.BOOK_CLASS_ID
) AS T 
PIVOT (COUNT(T.LendYear) FOR T.LendYear 
IN ([2016],[2017],[2018],[2019])) AS pvt
ORDER BY pvt.ClassId;

--7.	呈上，請使用 PIVOT 語法列出 2016, 2017, 2018, 2019 各書籍類別的借閱數量比較
DECLARE @EachYear NVARCHAR(MAX)
DECLARE @SQLString NVARCHAR(MAX) 
DECLARE @YearStr NVARCHAR(MAX)

SELECT @EachYear = ISNULL(@EachYear+',','') + QUOTENAME(YEAR(LEND_DATE)),
 @YearStr= ISNULL(@YearStr+',','') + QUOTENAME(YEAR(LEND_DATE))+ 'AS CNT'+ CONVERT(NVARCHAR(5),YEAR(LEND_DATE))
FROM BOOK_LEND_RECORD
GROUP BY QUOTENAME(YEAR(LEND_DATE)),YEAR(LEND_DATE);

SET @SQLString=N'
SELECT ClassId, 
		ClassName,
		'+@YearStr+N'
FROM (
	SELECT cl.BOOK_CLASS_ID AS ClassId, 
			cl.BOOK_CLASS_NAME AS ClassName, 
			YEAR(L.LEND_DATE) AS LendYear
	FROM BOOK_CLASS cl
	LEFT JOIN 
		(BOOK_DATA d		
			INNER JOIN BOOK_LEND_RECORD L
				ON L.BOOK_ID=d.BOOK_ID)
		ON cl.BOOK_CLASS_ID=d.BOOK_CLASS_ID
) AS T 
PIVOT (COUNT(T.LendYear) FOR T.LendYear 
IN ('+@EachYear+N')) AS pvt
ORDER BY pvt.ClassId;'
EXEC sys.sp_executesql @SQLString;

--8.	請查詢出李四的借書紀錄，其中包含書本ID、購書日期(yyyy/mm/dd)、借閱日期(yyyy/mm/dd)、書籍類別(id-name)、借閱人(id-cname(ename))、狀態(id-name)、購書金額
SELECT d.BOOK_ID AS 書本ID,	
		CONVERT(VARCHAR(10),d.BOOK_BOUGHT_DATE,111) AS 購書日期,
		CONVERT(VARCHAR(10),L.LEND_DATE,111) AS 借閱日期,
		cl.BOOK_CLASS_ID+'-'+cl.BOOK_CLASS_NAME AS 書籍類別,
		m.USER_ID+'-'+m.USER_CNAME+'('+m.USER_ENAME+')' AS 借閱人,
		co.CODE_ID+'-'+co.CODE_NAME AS 狀態,
		REPLACE(CONVERT(VARCHAR(10),CAST(d.BOOK_AMOUNT AS MONEY),1),'.00','')+'元' AS 購書金額
FROM MEMBER_M m
	INNER JOIN BOOK_LEND_RECORD L
		ON m.USER_ID=L.KEEPER_ID
	INNER JOIN BOOK_DATA d
		ON d.BOOK_ID=L.BOOK_ID
	INNER JOIN BOOK_CLASS cl
		ON cl.BOOK_CLASS_ID=d.BOOK_CLASS_ID
	INNER JOIN BOOK_CODE co
		ON co.CODE_ID=d.BOOK_STATUS
			AND co.CODE_TYPE='BOOK_STATUS'
WHERE m.USER_CNAME='李四'
ORDER BY 書本ID DESC;

--9.	新增一筆借閱紀錄，借書人為李四，書本ID為2004，並修改借閱日期為2019/01/02
BEGIN TRY
	BEGIN TRANSACTION
		INSERT INTO BOOK_LEND_RECORD(BOOK_ID,KEEPER_ID,LEND_DATE) 
		VALUES('2004',(SELECT USER_ID FROM MEMBER_M WHERE USER_CNAME='李四'),'2019-01-02')

  UPDATE BOOK_LEND_RECORD
  SET LEND_DATE='2019-01-02' 
  WHERE KEEPER_ID=(SELECT USER_ID FROM MEMBER_M WHERE USER_CNAME='李四')
 COMMIT TRANSACTION
END TRY

BEGIN CATCH
 SELECT ERROR_MESSAGE()
 ROLLBACK TRANSACTION
END CATCH

SELECT d.BOOK_ID AS 書本ID,
		d.BOOK_NAME AS 書名,	
		CONVERT(VARCHAR(10),d.BOOK_BOUGHT_DATE,111) AS 購書日期,
		CONVERT(VARCHAR(10),L.LEND_DATE,111) AS 借閱日期,
		cl.BOOK_CLASS_ID+'-'+cl.BOOK_CLASS_NAME AS 書籍類別,
		m.USER_ID+'-'+m.USER_CNAME+'('+m.USER_ENAME+')' AS 借閱人,
		co.CODE_ID+'-'+co.CODE_NAME AS 狀態,
		REPLACE(CONVERT(VARCHAR(10),CAST(d.BOOK_AMOUNT AS MONEY),1),'.00','')+'元' AS 購書金額
FROM MEMBER_M m
	INNER JOIN BOOK_LEND_RECORD L
		ON m.USER_ID=L.KEEPER_ID
	INNER JOIN BOOK_DATA d
		ON d.BOOK_ID=L.BOOK_ID
	INNER JOIN BOOK_CLASS cl
		ON cl.BOOK_CLASS_ID=d.BOOK_CLASS_ID
	INNER JOIN BOOK_CODE co
		ON co.CODE_ID=d.BOOK_STATUS
			AND co.CODE_TYPE='BOOK_STATUS'
WHERE m.USER_CNAME='李四'
ORDER BY 書本ID DESC;

--10.	請將題9新增的借閱紀錄(書本ID=2004)刪除
BEGIN TRY
 BEGIN TRANSACTION
  DELETE FROM BOOK_LEND_RECORD WHERE BOOK_ID=2004 AND KEEPER_ID=(SELECT USER_ID FROM MEMBER_M WHERE USER_CNAME='李四');
 COMMIT TRANSACTION
END TRY

BEGIN CATCH
 SELECT ERROR_MESSAGE()
 ROLLBACK TRANSACTION
END CATCH

SELECT d.BOOK_ID AS 書本ID,
		d.BOOK_NAME AS 書名,	
		CONVERT(VARCHAR(10),d.BOOK_BOUGHT_DATE,111) AS 購書日期,
		CONVERT(VARCHAR(10),L.LEND_DATE,111) AS 借閱日期,
		cl.BOOK_CLASS_ID+'-'+cl.BOOK_CLASS_NAME AS 書籍類別,
		m.USER_ID+'-'+m.USER_CNAME+'('+m.USER_ENAME+')' AS 借閱人,
		co.CODE_ID+'-'+co.CODE_NAME AS 狀態,
		REPLACE(CONVERT(VARCHAR(10),CAST(d.BOOK_AMOUNT AS MONEY),1),'.00','')+'元' AS 購書金額
FROM MEMBER_M m
	INNER JOIN BOOK_LEND_RECORD L
		ON m.USER_ID=L.KEEPER_ID
	INNER JOIN BOOK_DATA d
		ON d.BOOK_ID=L.BOOK_ID
	INNER JOIN BOOK_CLASS cl
		ON cl.BOOK_CLASS_ID=d.BOOK_CLASS_ID
	INNER JOIN BOOK_CODE co
		ON co.CODE_ID=d.BOOK_STATUS
			AND co.CODE_TYPE='BOOK_STATUS'
WHERE m.USER_CNAME='李四'
ORDER BY 書本ID DESC;
